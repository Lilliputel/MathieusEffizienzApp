<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:local="clr-namespace:EffizienzControls"
					xmlns:converter="clr-namespace:EffizienzControls.Converters"
					xmlns:system="clr-namespace:System;assembly=mscorlib"
					xmlns:classes="clr-namespace:ModelLayer.Classes;assembly=ModelLayer">

	<ControlTemplate TargetType="{x:Type local:ProportionalBar}"
					 x:Key="ProportionalBarTemplate">

		<ControlTemplate.Resources>
			<Style TargetType="{x:Type Grid}"
				   x:Key="GridTriggers">
				<Style.Triggers>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SizeFactor}"
								 Value="0">
						<Setter Property="Visibility"
								Value="Collapsed" />
					</DataTrigger>

					<!--#region Controls The Orientation in the specific Dockings of the Bar -->
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
								 Value="Left">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="0" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
								 Value="Top">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="90" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
								 Value="Right">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="180" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
								 Value="Bottom">
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="270" />
							</Setter.Value>
						</Setter>
					</DataTrigger>
					<!--#endregion-->

				</Style.Triggers>
			</Style>

			<Style TargetType="{x:Type ContentPresenter}"
				   x:Key="ContentPresenterTriggers">
				<Style.Triggers>

					<!--#region Controls The Orientation (Case Horizontal) of the Content -->
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Horizontal" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Left" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="0" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Horizontal" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Top" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="270" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Horizontal" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Right" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="180" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Horizontal" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Bottom" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="90" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<!--#endregion-->

					<!--#region Controls The Orientation (Case Vertical) of the Content -->
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Vertical" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Left" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="270" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Vertical" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Top" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="180" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Vertical" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Right" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="90" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<MultiDataTrigger>
						<MultiDataTrigger.Conditions>
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ContentOrientation}"
									   Value="Vertical" />
							<Condition Binding="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Dock}"
									   Value="Bottom" />
						</MultiDataTrigger.Conditions>
						<Setter Property="LayoutTransform">
							<Setter.Value>
								<RotateTransform Angle="0" />
							</Setter.Value>
						</Setter>
					</MultiDataTrigger>
					<!--#endregion-->

				</Style.Triggers>
			</Style>
		</ControlTemplate.Resources>

		<Grid Style="{StaticResource GridTriggers}">

			<Border Background="{TemplateBinding Background}"
					IsHitTestVisible="{TemplateBinding IsHitTestVisible}"
					Style="{TemplateBinding BarStyle}"
					Height="{TemplateBinding BarWidth}"
					MinHeight="{TemplateBinding BarMinWidth}"
					HorizontalAlignment="Left"
					VerticalAlignment="Stretch">
				<Border.Width>
					<MultiBinding Converter="{converter:DoublesToSize}">
						<Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
								 Path="TotalSize" />
						<Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
								 Path="SizeFactor" />
					</MultiBinding>
				</Border.Width>
				<Border.Margin>
					<MultiBinding Converter="{converter:DoublesToOffset}">
						<Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
								 Path="TotalSize" />
						<Binding RelativeSource="{RelativeSource Mode=TemplatedParent}"
								 Path="OffsetFactor" />
					</MultiBinding>
				</Border.Margin>

				<ContentPresenter Content="{TemplateBinding Content}"
								  ContentTemplate="{TemplateBinding ContentTemplate}"
								  ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								  ContentStringFormat="{TemplateBinding ContentStringFormat}"
								  Style="{StaticResource ContentPresenterTriggers}" />
			</Border>

		</Grid>
	</ControlTemplate>

	<Style TargetType="{x:Type local:ProportionalBar}">
		<Setter Property="Template"
				Value="{StaticResource ProportionalBarTemplate}" />
	</Style>
</ResourceDictionary>