<UserControl x:Class="FrontLayer.Views.GanttView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

			 xmlns:converter="clr-namespace:FrontLayer.Converters"
			 xmlns:classes="clr-namespace:ModelLayer.Classes;assembly=ModelLayer">

	<UserControl.Resources>
		<converter:ConverterAufgabe x:Key="AufgabenConverter"/>
		<converter:ConverterColorToSCB x:Key="ColorConverter"/>
	</UserControl.Resources>

	<!-- Background-Color -->
	<Border Background="{DynamicResource Back_1}"
			Style="{StaticResource BorderRounded}">

		<!-- TabControl mit den Kategorien als Tab -->
		<TabControl ItemsSource="{Binding Kategorien, UpdateSourceTrigger=PropertyChanged}"
					MinWidth="700"
					x:Name="ControlRoot">

			<!--#region Template für Tab -->

			<TabControl.ItemTemplate>
				<DataTemplate>
					<!-- Setzt ein Kreis und den Titel als TextBlock -->
					<StackPanel Orientation="Horizontal" Background="Transparent">
						<Ellipse x:Name="ColorEllipse" Fill="{Binding Farbe, Converter={StaticResource ColorConverter}}" 
							 Margin="0,0,5,0" Width="8" Height="8" 
							 HorizontalAlignment="Left" VerticalAlignment="Center"/>
						<TextBlock Text="{Binding Titel}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0"/>
					</StackPanel>
				</DataTemplate>
			</TabControl.ItemTemplate>
			<!--#endregion-->
			
			<TabControl.ContentTemplate>
				<DataTemplate DataType="{x:Type classes:Kategorie}">

					<!-- ItemControl mit Projekten als Expander -->
					<ItemsControl ItemsSource="{Binding Projekte, UpdateSourceTrigger=PropertyChanged}"
								  Background="Transparent"
								  x:Name="ProjektRoot">
						<ItemsControl.ItemTemplate>
							<DataTemplate DataType="{x:Type classes:Projekt}">
								<Expander Background="Transparent">
									<!-- Template für Expander -->
									<Expander.Header>
										<TextBlock Text="{Binding Titel}"/>
									</Expander.Header>

									<!-- itemsControl für Aufgaben -->
									<ItemsControl ItemsSource="{Binding Aufgaben, UpdateSourceTrigger=PropertyChanged}"
												  Background="Transparent"
												  x:Name="TimeLine">
										<ItemsControl.ItemTemplate>
											<DataTemplate DataType="{x:Type classes:Aufgabe}">

												<!-- Linie zwischen Aufgaben -->
												<Border BorderBrush="Black" BorderThickness="0,0,0,1" Background="Transparent">

													<!-- Grid um Spalten für Beschreibung & TimeLine zu erschaffen -->
													<Grid x:Name="ColumnGrid"
														  Height="20"
														  Margin="2"
														  Background="Transparent">
														<Grid.ColumnDefinitions>
															<ColumnDefinition Width="120"
																			  x:Name="TimeLineOffset"/>
															<ColumnDefinition Width="{Binding ElementName=ControlRoot, Path=MinWidth}"
																			  
																		  x:Name="TimeLineWidth"/>
														</Grid.ColumnDefinitions>

														<!-- Textblock mit Aufgabentitel für Spalte 1 -->
														<Border BorderBrush="Black" BorderThickness="0,0,1,0" Background="Transparent">
															<TextBlock Grid.Column="0" VerticalAlignment="Center"
															   Text="{Binding Titel}" />
														</Border>


														<!-- Ein Rechteck mit gerundeten Ecken, um die Verwendete Zeit in der ListView anzuzeigen -->
														<Border Grid.Column="1" 
																CornerRadius="5" 
																VerticalAlignment="Stretch"
																HorizontalAlignment="Left"
																Background="{Binding ElementName=ProjektRoot, Path=DataContext.Farbe, Converter={StaticResource ColorConverter}}">

															<!-- Mithilfe eines Converters wird die richtige StartPosition berechnet und als Abstand des Rechtecks definiert -->
															<Border.Margin>
																<MultiBinding Converter="{StaticResource AufgabenConverter}">
																	<Binding ElementName="TimeLine" 
																			 Path="DataContext.Planung.Start"/>
																	<Binding ElementName="TimeLine"
																			 Path="DataContext.Planung.Ende"/>

																	<Binding Path="Planung.Start"/>
																	
																	<Binding ElementName="TimeLineWidth"
																			 Path="Width"/>
																	<Binding ElementName="TimeLineOffset"
																			 Path="ActualWidth"/>
																</MultiBinding>
															</Border.Margin>

															<!-- Mithilfe eines Converters wird die richtige EndPosition berechnet und als breite des Rechtecks definiert -->
															<Border.Width>
																<MultiBinding Converter="{StaticResource AufgabenConverter}">
																	<Binding ElementName="TimeLine" 
																			 Path="DataContext.Planung.Start"/>
																	<Binding ElementName="TimeLine" 
																			 Path="DataContext.Planung.Ende"/>

																	<Binding Path="Planung.Ende"/>
																	
																	<Binding ElementName="TimeLineWidth"
																			 Path="Width"/>
																	<Binding ElementName="TimeLineOffset"
																			 Path="ActualWidth"/>
																</MultiBinding>
															</Border.Width>

														</Border>
													</Grid>
												</Border>

											</DataTemplate>
										</ItemsControl.ItemTemplate>
									</ItemsControl>

								</Expander>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>

				</DataTemplate>
			</TabControl.ContentTemplate>
		</TabControl>

	</Border>

</UserControl>
