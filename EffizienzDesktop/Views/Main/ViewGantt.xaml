<UserControl x:Class="Effizienz.Views.ViewGantt"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

			 xmlns:converter="clr-namespace:Effizienz.Converters">

	<UserControl.Resources>
		<converter:ConverterAufgabe x:Key="AufgabenConverter"/>
		<converter:ConverterColorToSCB x:Key="ColorConverter"/>
	</UserControl.Resources>

	<!-- TabControl mit den Kategorien als Tab -->
	<TabControl ItemsSource="{Binding Kategorien, UpdateSourceTrigger=PropertyChanged}" Grid.Row="0"
				MinWidth="700"
				x:Name="ControlRoot"
				BorderBrush="{x:Null}" 
				Background="LightGray">
		<TabControl.Resources>
			<!-- Style für Tabs -->
			<Style TargetType="{x:Type TabItem}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TabItem}">
							<!-- Setzt ein Grid als HintergrundPanel -->
							<Grid Name="Panel">
								<ContentPresenter x:Name="ContentSite"
												  VerticalAlignment="Center"
												  HorizontalAlignment="Center"
												  ContentSource="Header"
												  Margin="10,2"/>
							</Grid>
							<!-- Stylt die verschiedene Anzeigezustände -->
							<ControlTemplate.Triggers>
								<Trigger Property="IsSelected" Value="True">
									<Setter TargetName="Panel" Property="Background" Value="LightSkyBlue" />
								</Trigger>
								<Trigger Property="IsSelected" Value="False">
									<Setter TargetName="Panel" Property="Background" Value="White" />
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</TabControl.Resources>
		
		<!-- Template für Tab -->
		<TabControl.ItemTemplate>
			<DataTemplate>
				<!-- Setzt ein Kreis und den Titel als TextBlock -->
				<StackPanel Orientation="Horizontal">
					<Ellipse x:Name="ColorEllipse" Fill="{Binding Farbe, Converter={StaticResource ColorConverter}}" 
							 Margin="2" Width="10" Height="10" 
							 HorizontalAlignment="Center" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding Titel}"/>
				</StackPanel>
			</DataTemplate>
		</TabControl.ItemTemplate>
		<TabControl.ContentTemplate>
			<DataTemplate>

				<!-- ItemControl mit Projekten als Expander -->
				<ItemsControl ItemsSource="{Binding Projekte, UpdateSourceTrigger=PropertyChanged}" 
							  x:Name="ProjektRoot">
					<ItemsControl.Background>
						<SolidColorBrush Color="{Binding Farbe}" Opacity="0"/>
					</ItemsControl.Background>
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<Expander>
								<!-- Template für Expander -->
								<Expander.Header>
									<TextBlock Text="{Binding Titel}"/>
								</Expander.Header>

								<!-- itemsControl für Aufgaben -->
								<ItemsControl ItemsSource="{Binding Aufgaben, UpdateSourceTrigger=PropertyChanged}" 
											  x:Name="TimeLine">
									<ItemsControl.ItemTemplate>
										<DataTemplate>

											<!-- Linie zwischen Aufgaben -->
											<Border BorderBrush="Black" BorderThickness="0,0,0,1">

												<!-- Grid um Spalten für Beschreibung & TimeLine zu erschaffen -->
												<Grid x:Name="ColumnGrid"
													  Height="20"
													  Margin="2">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="120"
																		  x:Name="TimeLineOffset"/>
														<ColumnDefinition Width="{Binding ElementName=ControlRoot, Path=MinWidth}" 
																		  x:Name="TimeLineWidth"/>
													</Grid.ColumnDefinitions>

													<!-- Textblock mit Aufgabentitel für Spalte 1 -->
													<Border BorderBrush="Black" BorderThickness="0,0,1,0">
														<TextBlock Grid.Column="0" VerticalAlignment="Center"
															   Text="{Binding Titel}" />
													</Border>
													

													<!-- Ein Rechteck mit gerundeten Ecken, um die Verwendete Zeit in der ListView anzuzeigen -->
													<Border Grid.Column="1" 
															CornerRadius="5" 
															VerticalAlignment="Stretch"
															HorizontalAlignment="Left"
															Background="{Binding ElementName=ProjektRoot, Path=DataContext.Farbe, Converter={StaticResource ColorConverter}}">
														
														<!-- Mithilfe eines Converters wird die richtige StartPosition berechnet und als Abstand des Rechtecks definiert -->
														<Border.Margin>
															<MultiBinding Converter="{StaticResource AufgabenConverter}">
																<Binding ElementName="TimeLine" 
																		 Path="DataContext.StartDatum"/>
																<Binding ElementName="TimeLine"
																		 Path="DataContext.EndDatum"/>

																<Binding Path="StartDatum"/>
																<Binding ElementName="TimeLineWidth"
																		 Path="Width"/>
																<Binding ElementName="TimeLineOffset"
																		 Path="ActualWidth"/>
															</MultiBinding>
														</Border.Margin>
														
														<!-- Mithilfe eines Converters wird die richtige EndPosition berechnet und als breite des Rechtecks definiert -->
														<Border.Width>
															<MultiBinding Converter="{StaticResource AufgabenConverter}">
																<Binding ElementName="TimeLine" 
																		 Path="DataContext.StartDatum"/>
																<Binding ElementName="TimeLine" 
																		 Path="DataContext.EndDatum"/>

																<Binding Path="EndDatum"/>
																<Binding ElementName="TimeLineWidth"
																		 Path="Width"/>
																<Binding ElementName="TimeLineOffset"
																		 Path="ActualWidth"/>
															</MultiBinding>
														</Border.Width>

													</Border>
												</Grid>
											</Border>

										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>

							</Expander>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

			</DataTemplate>
		</TabControl.ContentTemplate>
	</TabControl>

</UserControl>
