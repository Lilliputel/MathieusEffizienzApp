<UserControl x:Class="FrontLayer.WPF.Views.GanttDiagramView"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"

			 xmlns:converter="clr-namespace:FrontLayer.WPF.Converters"
			 xmlns:classes="clr-namespace:ModelLayer.Classes;assembly=ModelLayer"
			 xmlns:manager="clr-namespace:LogicLayer.Manager;assembly=LogicLayer"
			 DataContext="{x:Static manager:ViewModelManager.GanttDiagram}">

		<!-- TabControl mit den Kategorien als Tab -->
	<TabControl ItemsSource="{Binding Categories, UpdateSourceTrigger=PropertyChanged}"
					MinWidth="700"
					x:Name="ControlRoot">

		<!--#region Template für Tab -->
		<TabControl.ItemTemplate>
			<DataTemplate DataType="{x:Type classes:Category}">
				<!-- Setzt ein Kreis und den Titel als TextBlock -->
				<StackPanel Orientation="Horizontal" Background="Transparent">
					<Ellipse x:Name="ColorEllipse" Fill="{Binding Color, Converter={converter:DrawingColorToSolidBrush}}" 
							 Margin="0,0,5,0" Width="8" Height="8" 
							 HorizontalAlignment="Left" VerticalAlignment="Center"/>
					<TextBlock Text="{Binding Title}" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0"/>
				</StackPanel>
			</DataTemplate>
		</TabControl.ItemTemplate>
		<!--#endregion-->

		<TabControl.ContentTemplate>

			<!-- Template für Kategorie -->
			<DataTemplate DataType="{x:Type classes:Category}">

				<!-- ItemControl als Expander -->
				<ItemsControl ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}"
								  Background="Transparent"
								  x:Name="ProjektRoot">
					<ItemsControl.ItemTemplate>
						<DataTemplate DataType="{x:Type classes:Goal}">
							<Expander Background="Transparent">
								<!-- Template für Expander -->
								<Expander.Header>
									<TextBlock Text="{Binding Title}"/>
								</Expander.Header>

								<!-- itemsControl für Aufgaben -->
								<ItemsControl ItemsSource="{Binding Children, UpdateSourceTrigger=PropertyChanged}"
												  Background="Transparent"
												  x:Name="TimeLine">
									<ItemsControl.ItemTemplate>
										<DataTemplate DataType="{x:Type classes:Goal}">

											<!-- Linie zwischen Aufgaben -->
											<Border BorderBrush="Black" BorderThickness="0,0,0,1" Background="Transparent">

												<!-- Grid um Spalten für Beschreibung & TimeLine zu erschaffen -->
												<Grid x:Name="ColumnGrid"
														  Height="20"
														  Margin="2"
														  Background="Transparent">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="120"
																		  x:Name="TimeLineOffset"/>
														<ColumnDefinition x:Name="TimeLineWidth">
															<ColumnDefinition.Width>
																<MultiBinding Converter="{converter:DoublesToGridLenght}">
																	<Binding ElementName="ControlRoot" Path="ActualWidth"/>
																	<Binding ElementName="TimeLineOffset" Path="Width"/>
																</MultiBinding>
															</ColumnDefinition.Width>
														</ColumnDefinition>														
													</Grid.ColumnDefinitions>

													<!-- Textblock mit Aufgabentitel für Spalte 1 -->
													<Border BorderBrush="Black" BorderThickness="0,0,1,0" Background="Transparent">
														<TextBlock Grid.Column="0" VerticalAlignment="Center"
																   Text="{Binding Title}" />
													</Border>


													<!-- Ein Rechteck mit gerundeten Ecken, um die Verwendete Zeit in der ListView anzuzeigen -->
													<Border Grid.Column="1" 
															CornerRadius="5" 
															VerticalAlignment="Stretch"
															HorizontalAlignment="Left"
															Background="{Binding ElementName=ProjektRoot, Path=DataContext.Color, Converter={converter:DrawingColorToSolidBrush}}">

														<!-- Mithilfe eines Converters wird die richtige StartPosition berechnet und als Abstand des Rechtecks definiert -->
														<Border.Margin>
															<MultiBinding Converter="{converter:DateTimesToLeftMargin}">
																<Binding ElementName="TimeLine" 
																			 Path="DataContext.Plan.Start"/>
																<Binding ElementName="TimeLine"
																			 Path="DataContext.Plan.End"/>

																<Binding Path="Plan.Start"/>

																<Binding ElementName="TimeLineWidth"
																		 Path="Width"/>
																<Binding ElementName="TimeLineOffset"
																		 Path="ActualWidth"/>
															</MultiBinding>
														</Border.Margin>

														<!-- Mithilfe eines Converters wird die richtige EndPosition berechnet und als breite des Rechtecks definiert -->
														<Border.Width>
															<MultiBinding Converter="{converter:DateTimesToWidth}">
																<Binding ElementName="TimeLine" 
																			 Path="DataContext.Plan.Start"/>
																<Binding ElementName="TimeLine" 
																			 Path="DataContext.Plan.End"/>

																<Binding Path="Plan.End"/>

																<Binding ElementName="TimeLineWidth"
																			 Path="Width"/>
																<Binding ElementName="TimeLineOffset"
																			 Path="ActualWidth"/>
															</MultiBinding>
														</Border.Width>

													</Border>
												</Grid>
											</Border>

										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>

							</Expander>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

			</DataTemplate>
		</TabControl.ContentTemplate>
	</TabControl>
	
</UserControl>
