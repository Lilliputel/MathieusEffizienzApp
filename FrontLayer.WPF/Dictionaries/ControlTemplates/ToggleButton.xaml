<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					mc:Ignorable="d">

	<PathGeometry x:Key="TreeArrow"
				  Figures="M0,0 L0,6 L6,0 z" />
	
	<!--#region ComboBox Style -->
	<Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="templateRoot" Background="{DynamicResource SecondaryBrush}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource TertinaryBrush}" SnapsToDevicePixels="true">
						<Border x:Name="splitBorder" BorderThickness="1" BorderBrush="Transparent" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
							<Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{DynamicResource TertinaryBrush}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
						</MultiDataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{DynamicResource PrimaryBrush.MouseOver}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.MouseOver}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.MouseOver}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{DynamicResource SecondaryBrush.MouseOver}"/>
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
						</MultiDataTrigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{DynamicResource PrimaryBrush.Selected}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
						</MultiDataTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Fill"
									TargetName="arrow"
									Value="{DynamicResource ComboBox.Disabled.Glyph}"/>
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.Disabled}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.Disabled}"/>
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
								<Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
							</MultiDataTrigger.Conditions>
							<Setter Property="Background"
									TargetName="templateRoot"
									Value="{DynamicResource SecondaryBrush.Disabled}"/>
							<Setter Property="BorderBrush"
									TargetName="templateRoot"
									Value="{DynamicResource TertinaryBrush.Disabled}"/>
							<Setter Property="Background"
									TargetName="splitBorder"
									Value="{DynamicResource SecondaryBrush.Disabled}"/>
							<Setter Property="BorderBrush"
									TargetName="splitBorder"
									Value="{DynamicResource TertinaryBrush.Disabled}"/>
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region ExpandCollapse Style -->
	<Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Width" Value="16"/>
		<Setter Property="Height" Value="16"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
						<Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" Fill="{DynamicResource PrimaryBrush}" Stroke="{DynamicResource TertinaryBrush}">
							<Path.RenderTransform>
								<RotateTransform Angle="135" CenterY="3" CenterX="3"/>
							</Path.RenderTransform>
						</Path>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="RenderTransform" TargetName="ExpandPath">
								<Setter.Value>
									<RotateTransform Angle="180" CenterY="3" CenterX="3"/>
								</Setter.Value>
							</Setter>
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{DynamicResource PrimaryBrush}"/>
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{DynamicResource TertinaryBrush}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{DynamicResource PrimaryBrush.MouseOver}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Stroke"
									TargetName="ExpandPath"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
							<Setter Property="Fill"
									TargetName="ExpandPath"
									Value="{DynamicResource PrimaryBrush.MouseOver}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

	<!--#region Standard Style -->
	<Style TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background"
				Value="{DynamicResource SecondaryBrush}"/>
		<Setter Property="BorderBrush"
				Value="{DynamicResource TertinaryBrush}"/>
		<Setter Property="Foreground"
				Value="{DynamicResource PrimaryBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Button.IsDefaulted" Value="true">
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource SecondaryBrush.MouseOver}"/>
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource TertinaryBrush.MouseOver}"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource SecondaryBrush.Selected}"/>
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource TertinaryBrush.Selected}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background"
									TargetName="border"
									Value="{DynamicResource SecondaryBrush.Disabled}"/>
							<Setter Property="BorderBrush"
									TargetName="border"
									Value="{DynamicResource TertinaryBrush.Disabled}"/>
							<Setter Property="TextElement.Foreground"
									TargetName="contentPresenter"
									Value="{DynamicResource PrimaryBrush.Disabled}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--#endregion-->

</ResourceDictionary>